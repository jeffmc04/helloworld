{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "A space station except way more Aero-dynamic",
    "title": "Aerostation API service",
    "contact": {
      "email": "sbhagat@aerospike.com"
    },
    "version": "1.0.0"
  },
  "basePath": "/v1",
  "paths": {
    "/api/v1/admin/aerospike/clusters": {
      "get": {
        "description": "Get names of all the workload clusters in array of string",
        "produces": [
          "application/json"
        ],
        "tags": [
          "admin"
        ],
        "summary": "Get all aerospike database clusters",
        "operationId": "getAllAerospikeClusters",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NamespacedName"
              },
              "example": [
                {
                  "name": "cluster-name",
                  "namespace": "cluster-namespace"
                },
                {
                  "name": "cluster2-name",
                  "namespace": "cluster2-namespace"
                }
              ]
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "description": "Create a aerospike database cluster",
        "produces": [
          "application/json"
        ],
        "tags": [
          "admin"
        ],
        "summary": "Create a aerospike database cluster",
        "operationId": "adminCreateAerospikeCluster",
        "parameters": [
          {
            "description": "Request body for creating workload cluster",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAerospikeClusterAdminRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Aerospike database created successfully"
          },
          "400": {
            "description": "Unable to create cluster"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Unable to create cluster"
          }
        }
      }
    },
    "/api/v1/admin/aerospike/clusters/{namespace}/{name}": {
      "get": {
        "description": "Get names of all the workload clusters in array of string",
        "produces": [
          "application/json"
        ],
        "tags": [
          "admin"
        ],
        "summary": "Get all aerospike database clusters",
        "operationId": "adminGetAerospikeCluster",
        "parameters": [
          {
            "type": "string",
            "description": "Namespace of the cluster",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Name of the cluster",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/AerospikeClusterResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "cluster not found"
          }
        }
      },
      "delete": {
        "description": "Delete a aerospike database cluster",
        "produces": [
          "application/json"
        ],
        "tags": [
          "admin"
        ],
        "summary": "Delete a aerospike database cluster",
        "operationId": "adminDeleteAerospikeCluster",
        "parameters": [
          {
            "type": "string",
            "description": "Name of the aerospike cluster to delete",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Namespace of the aerospike cluster to delete",
            "name": "namespace",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Aerospike cluster deleted successfully"
          },
          "400": {
            "description": "Unable to delete cluster"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "patch": {
        "description": "Update a aerospike cluster",
        "produces": [
          "application/json"
        ],
        "tags": [
          "admin"
        ],
        "summary": "Update a aerospike cluster",
        "operationId": "AdminUpdateAerospikeCluster",
        "parameters": [
          {
            "type": "string",
            "description": "Name of the aerospike cluster to delete",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Namespace of the aerospike cluster to delete",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body for updating aerospike cluster",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatabaseOptions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cluster updated successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Unable to find cluster"
          }
        }
      }
    },
    "/api/v1/admin/kubernetes/clusters": {
      "get": {
        "description": "Get names of all the workload clusters in array of string",
        "produces": [
          "application/json"
        ],
        "tags": [
          "admin"
        ],
        "summary": "Get all clusters",
        "operationId": "getAllClusters",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NamespacedName"
              },
              "example": [
                {
                  "name": "cluster-name",
                  "namespace": "cluster-namespace"
                },
                {
                  "name": "cluster2-name",
                  "namespace": "cluster2-namespace"
                }
              ]
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "description": "Create a workload cluster",
        "produces": [
          "application/json"
        ],
        "tags": [
          "admin"
        ],
        "summary": "Create a workload cluster",
        "operationId": "createClusters",
        "parameters": [
          {
            "description": "Request body for creating workload cluster",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClusterOptions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cluster created successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Unable to create cluster"
          }
        }
      },
      "patch": {
        "description": "Update a workload cluster",
        "produces": [
          "application/json"
        ],
        "tags": [
          "admin"
        ],
        "summary": "Update a workload cluster",
        "operationId": "updateClusters",
        "parameters": [
          {
            "description": "Request body for updating workload cluster",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClusterOptions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cluster updated successfully"
          },
          "400": {
            "description": "Unable to update cluster"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Unable to update cluster"
          }
        }
      }
    },
    "/api/v1/admin/kubernetes/clusters/{namespace}/{name}": {
      "get": {
        "description": "Returns cluster spec by name",
        "produces": [
          "application/json"
        ],
        "tags": [
          "admin"
        ],
        "summary": "Get cluster spec by name",
        "operationId": "getClusterSpec",
        "parameters": [
          {
            "type": "string",
            "description": "Namespace of the cluster",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Name of the cluster",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/KubernetesClusterResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "cluster not found"
          }
        }
      },
      "delete": {
        "description": "Delete a workload cluster",
        "produces": [
          "application/json"
        ],
        "tags": [
          "admin"
        ],
        "summary": "Delete a workload cluster",
        "operationId": "deleteClusters",
        "parameters": [
          {
            "type": "string",
            "description": "Name of the cluster to delete",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Name of the cluster to delete",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Cluster deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Unable to delete cluster"
          }
        }
      }
    },
    "/api/v1/aerospike/clusters": {
      "get": {
        "description": "Get names of all the workload clusters in array of string",
        "produces": [
          "application/json"
        ],
        "tags": [
          "aerospike"
        ],
        "summary": "Get all aerospike database clusters",
        "operationId": "getAerospikeClusters",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "aerospike-cluster-1",
                "aerospike-cluster-2"
              ]
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "description": "Create a aerospike database cluster",
        "produces": [
          "application/json"
        ],
        "tags": [
          "aerospike"
        ],
        "summary": "Create a aerospike database cluster",
        "operationId": "createAerospikeCluster",
        "parameters": [
          {
            "description": "Request body for creating workload cluster",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAerospikeClusterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Aerospike database created successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Unable to create cluster"
          }
        }
      }
    },
    "/api/v1/aerospike/clusters/{name}": {
      "get": {
        "description": "Returns cluster status by name",
        "produces": [
          "application/json"
        ],
        "tags": [
          "aerospike"
        ],
        "summary": "Get database status by name",
        "operationId": "getAerospikeCluster",
        "parameters": [
          {
            "type": "string",
            "description": "Name of the aerospike cluster",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/AeroDatabaseSpec"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "cluster not found"
          }
        }
      },
      "delete": {
        "description": "Delete a aerospike database cluster",
        "produces": [
          "application/json"
        ],
        "tags": [
          "aerospike"
        ],
        "summary": "Delete a aerospike database cluster",
        "operationId": "deleteAerospikeClusters",
        "parameters": [
          {
            "type": "string",
            "description": "Name of the aerospike cluster to delete",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Aerospike cluster deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "description": "Update a aerospike cluster",
        "produces": [
          "application/json"
        ],
        "tags": [
          "aerospike"
        ],
        "summary": "Update a aerospike cluster",
        "operationId": "updateAerospikeClusters",
        "parameters": [
          {
            "type": "string",
            "description": "Name of the aerospike cluster to update",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body for updating aerospike cluster",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatabaseOptions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cluster updated successfully"
          },
          "400": {
            "description": "Unable to update aerospike cluster"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/clouds": {
      "get": {
        "description": "get all supported clouds",
        "produces": [
          "application/json"
        ],
        "tags": [
          "clouds"
        ],
        "summary": "Get all supported clouds",
        "operationId": "GetSupportedClouds",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Cloud"
              },
              "example": [
                {
                  "image": "https://some-s3-bucket",
                  "name": "AWS"
                }
              ]
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/clouds/aws/regions": {
      "get": {
        "description": "Get all of the supported regions in AWS",
        "produces": [
          "application/json"
        ],
        "tags": [
          "cloud"
        ],
        "summary": "Get all supported regions in AWS",
        "operationId": "GetAWSRegions",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AwsRegion"
              },
              "example": [
                {
                  "continent": "North America",
                  "name": "N. Virginia",
                  "region": "us-east-1"
                },
                {
                  "continent": "North America",
                  "name": "N. California",
                  "region": "us-west-1"
                }
              ]
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/clouds/aws/{region}/instances": {
      "get": {
        "description": "Get list of all the instances for a region in AWS",
        "produces": [
          "application/json"
        ],
        "tags": [
          "cloud"
        ],
        "summary": "Get list of all the instances for a region in AWS",
        "operationId": "GetRegionInstanceTypes",
        "parameters": [
          {
            "type": "string",
            "description": "AWS region",
            "name": "region",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AwsInstanceType"
              },
              "example": [
                {
                  "cost": 1.3,
                  "flavors": [
                    "Memory"
                  ],
                  "name": "A3000"
                },
                {
                  "cost": 2.1,
                  "flavors": [
                    "Memory",
                    "HMA"
                  ],
                  "name": "A4000"
                }
              ]
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/signin": {
      "post": {
        "description": "Signs in the user in aerostation",
        "produces": [
          "application/json"
        ],
        "tags": [
          "user-service"
        ],
        "summary": "Signs in the user in aerostation",
        "operationId": "signin",
        "parameters": [
          {
            "description": "Request body for sign in",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SignInRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/SignInResponse"
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/signup": {
      "post": {
        "description": "Signs up the user in aerostation",
        "produces": [
          "application/json"
        ],
        "tags": [
          "user-service"
        ],
        "summary": "Signs up the user in aerostation",
        "operationId": "signup",
        "parameters": [
          {
            "description": "Request body for sign up",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SignupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "signup complete !"
          },
          "400": {
            "description": "Invalid request"
          },
          "500": {
            "description": "User already exist"
          }
        }
      }
    }
  },
  "definitions": {
    "AKSOptions": {
      "type": "object",
      "x-go-package": "github.com/aerospike/aerostation/api/v1"
    },
    "APIEndpoint": {
      "type": "object",
      "title": "APIEndpoint represents a reachable Kubernetes API endpoint.",
      "properties": {
        "host": {
          "description": "The hostname on which the API server is serving.",
          "type": "string",
          "x-go-name": "Host"
        },
        "port": {
          "description": "The port on which the API server is serving.",
          "type": "integer",
          "format": "int32",
          "x-go-name": "Port"
        }
      },
      "x-go-package": "github.com/aerospike/aerostation/api/v1"
    },
    "AeroClusterManager": {
      "description": "AeroClusterManager is the Schema for the aeroclustermanagers API",
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Annotations"
        },
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n+optional",
          "type": "string",
          "x-go-name": "APIVersion"
        },
        "clusterName": {
          "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n+optional",
          "type": "string",
          "x-go-name": "ClusterName"
        },
        "creationTimestamp": {
          "$ref": "#/definitions/Time"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "DeletionGracePeriodSeconds"
        },
        "deletionTimestamp": {
          "$ref": "#/definitions/Time"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Finalizers"
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional",
          "type": "string",
          "x-go-name": "GenerateName"
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Generation"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional",
          "type": "string",
          "x-go-name": "Kind"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Labels"
        },
        "managedFields": {
          "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedFieldsEntry"
          },
          "x-go-name": "ManagedFields"
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
          "type": "string",
          "x-go-name": "Name"
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
          "type": "string",
          "x-go-name": "Namespace"
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OwnerReference"
          },
          "x-go-name": "OwnerReferences"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional",
          "type": "string",
          "x-go-name": "ResourceVersion"
        },
        "selfLink": {
          "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n\nDEPRECATED\nKubernetes will stop propagating this field in 1.20 release and the field is planned\nto be removed in 1.21 release.\n+optional",
          "type": "string",
          "x-go-name": "SelfLink"
        },
        "spec": {
          "$ref": "#/definitions/AeroClusterManagerSpec"
        },
        "status": {
          "$ref": "#/definitions/AeroClusterManagerStatus"
        },
        "uid": {
          "$ref": "#/definitions/UID"
        }
      },
      "x-go-package": "github.com/aerospike/aerostation/api/v1"
    },
    "AeroClusterManagerList": {
      "description": "AeroClusterManagerList contains a list of AeroClusterManager",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n+optional",
          "type": "string",
          "x-go-name": "APIVersion"
        },
        "continue": {
          "description": "continue may be set if the user set a limit on the number of items returned, and indicates that\nthe server has more data available. The value is opaque and may be used to issue another request\nto the endpoint that served this list to retrieve the next set of available objects. Continuing a\nconsistent list may not be possible if the server configuration has changed or more than a few\nminutes have passed. The resourceVersion field returned when using this continue value will be\nidentical to the value in the first response, unless you have received this token from an error\nmessage.",
          "type": "string",
          "x-go-name": "Continue"
        },
        "items": {
          "description": "the schema for the aeroclustermanagers API",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AeroClusterManager"
          },
          "x-go-name": "Items"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional",
          "type": "string",
          "x-go-name": "Kind"
        },
        "remainingItemCount": {
          "description": "remainingItemCount is the number of subsequent items in the list which are not included in this\nlist response. If the list request contained label or field selectors, then the number of\nremaining items is unknown and the field will be left unset and omitted during serialization.\nIf the list is complete (either because it is not chunking or because this is the last chunk),\nthen there are no more remaining items and this field will be left unset and omitted during\nserialization.\nServers older than v1.15 do not set this field.\nThe intended use of the remainingItemCount is *estimating* the size of a collection. Clients\nshould not rely on the remainingItemCount to be set or to be exact.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "RemainingItemCount"
        },
        "resourceVersion": {
          "description": "String that identifies the server's internal version of this object that\ncan be used by clients to determine when objects have changed.\nValue must be treated as opaque by clients and passed unmodified back to the server.\nPopulated by the system.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional",
          "type": "string",
          "x-go-name": "ResourceVersion"
        },
        "selfLink": {
          "description": "selfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n\nDEPRECATED\nKubernetes will stop propagating this field in 1.20 release and the field is planned\nto be removed in 1.21 release.\n+optional",
          "type": "string",
          "x-go-name": "SelfLink"
        }
      },
      "x-go-package": "github.com/aerospike/aerostation/api/v1"
    },
    "AeroClusterManagerSpec": {
      "description": "AeroClusterManagerSpec defines the desired state of AeroClusterManager",
      "type": "object",
      "properties": {
        "clusterId": {
          "$ref": "#/definitions/NamespacedName"
        },
        "clusterOptions": {
          "$ref": "#/definitions/ClusterOptions"
        },
        "controlPlaneEndpoint": {
          "$ref": "#/definitions/APIEndpoint"
        },
        "managed": {
          "type": "boolean",
          "x-go-name": "Managed"
        },
        "name": {
          "description": "Name of Cluster",
          "type": "string",
          "x-go-name": "Name",
          "example": "cluster-id"
        },
        "suspend": {
          "description": "Used to pause reconciliation of object for debugging",
          "type": "boolean",
          "x-go-name": "Suspend"
        }
      },
      "x-go-package": "github.com/aerospike/aerostation/api/v1"
    },
    "AeroClusterManagerStatus": {
      "description": "AeroClusterManagerStatus defines the observed state of AeroClusterManager",
      "type": "object",
      "properties": {
        "aerospikeOperator": {
          "$ref": "#/definitions/ApplicationStatus"
        },
        "phase": {
          "description": "INSERT ADDITIONAL STATUS FIELD - define observed state of cluster\nImportant: Run \"make\" to regenerate code after modifying this file\nShould hold status on all apps installed or not installed",
          "type": "string",
          "x-go-name": "Phase"
        },
        "prometheusExporter": {
          "$ref": "#/definitions/ApplicationStatus"
        }
      },
      "x-go-package": "github.com/aerospike/aerostation/api/v1"
    },
    "AeroDatabase": {
      "description": "AeroDatabase is the Schema for the aerodatabases API",
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Annotations"
        },
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n+optional",
          "type": "string",
          "x-go-name": "APIVersion"
        },
        "clusterName": {
          "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n+optional",
          "type": "string",
          "x-go-name": "ClusterName"
        },
        "creationTimestamp": {
          "$ref": "#/definitions/Time"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "DeletionGracePeriodSeconds"
        },
        "deletionTimestamp": {
          "$ref": "#/definitions/Time"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Finalizers"
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional",
          "type": "string",
          "x-go-name": "GenerateName"
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Generation"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional",
          "type": "string",
          "x-go-name": "Kind"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Labels"
        },
        "managedFields": {
          "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedFieldsEntry"
          },
          "x-go-name": "ManagedFields"
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
          "type": "string",
          "x-go-name": "Name"
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
          "type": "string",
          "x-go-name": "Namespace"
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OwnerReference"
          },
          "x-go-name": "OwnerReferences"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional",
          "type": "string",
          "x-go-name": "ResourceVersion"
        },
        "selfLink": {
          "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n\nDEPRECATED\nKubernetes will stop propagating this field in 1.20 release and the field is planned\nto be removed in 1.21 release.\n+optional",
          "type": "string",
          "x-go-name": "SelfLink"
        },
        "spec": {
          "$ref": "#/definitions/AeroDatabaseSpec"
        },
        "status": {
          "$ref": "#/definitions/AeroDatabaseStatus"
        },
        "uid": {
          "$ref": "#/definitions/UID"
        }
      },
      "x-go-package": "github.com/aerospike/aerostation/api/v1"
    },
    "AeroDatabaseSpec": {
      "description": "AeroDatabaseSpec defines the desired state of AeroDatabase",
      "type": "object",
      "required": [
        "clusterKey",
        "name",
        "namespace",
        "targetNamespace",
        "databaseType",
        "options"
      ],
      "properties": {
        "clusterKey": {
          "$ref": "#/definitions/ClusterKey"
        },
        "databaseType": {
          "description": "DatabaseType of the aerospike cluster (memory/ssd/performance)",
          "type": "string",
          "x-go-name": "DatabaseType",
          "example": "memory"
        },
        "deployClient": {
          "description": "flag if set will cause the REST client to be deployed",
          "type": "boolean",
          "x-go-name": "DeployClient",
          "example": true
        },
        "name": {
          "description": "Name of aerospike cluster",
          "type": "string",
          "x-go-name": "Name",
          "example": "name"
        },
        "namespace": {
          "description": "Namespace of aerospike cluster",
          "type": "string",
          "x-go-name": "Namespace",
          "example": "default"
        },
        "options": {
          "$ref": "#/definitions/DatabaseOptions"
        },
        "targetNamespace": {
          "description": "Namespace on remote cluster where aerospike database will be created",
          "type": "string",
          "x-go-name": "TargetNamespace",
          "example": "default"
        }
      },
      "x-go-package": "github.com/aerospike/aerostation/api/v1"
    },
    "AeroDatabaseStatus": {
      "description": "AeroDatabaseStatus defines the observed state of AeroDatabase",
      "type": "object",
      "properties": {
        "lastError": {
          "type": "string",
          "x-go-name": "LastError"
        },
        "phase": {
          "description": "INSERT ADDITIONAL STATUS FIELD - define observed state of cluster\nImportant: Run \"make\" to regenerate code after modifying this file",
          "type": "string",
          "x-go-name": "Phase"
        }
      },
      "x-go-package": "github.com/aerospike/aerostation/api/v1"
    },
    "AerospikeClusterResponse": {
      "type": "object",
      "properties": {
        "cluster": {
          "$ref": "#/definitions/AeroDatabaseSpec"
        },
        "status": {
          "$ref": "#/definitions/AeroDatabaseStatus"
        }
      },
      "x-go-package": "github.com/aerospike/aerostation/api-server/pkg/responses"
    },
    "ApplicationStatus": {
      "type": "object",
      "properties": {
        "running": {
          "type": "boolean",
          "x-go-name": "Running"
        }
      },
      "x-go-package": "github.com/aerospike/aerostation/api/v1"
    },
    "AwsInstanceType": {
      "type": "object",
      "properties": {
        "cost": {
          "type": "number",
          "format": "float",
          "x-go-name": "Cost"
        },
        "flavors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Flavors"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        }
      },
      "x-go-package": "github.com/aerospike/aerostation/api-server/pkg/responses"
    },
    "AwsRegion": {
      "type": "object",
      "properties": {
        "continent": {
          "type": "string",
          "x-go-name": "Continent"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "region": {
          "type": "string",
          "x-go-name": "Region"
        }
      },
      "x-go-package": "github.com/aerospike/aerostation/api-server/pkg/responses"
    },
    "Cloud": {
      "type": "object",
      "properties": {
        "image": {
          "type": "string",
          "x-go-name": "Image"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        }
      },
      "x-go-package": "github.com/aerospike/aerostation/api-server/pkg/responses"
    },
    "ClusterKey": {
      "description": "ClusterKey is the key to the cluster",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "namespace": {
          "type": "string",
          "x-go-name": "Namespace"
        }
      },
      "x-go-package": "github.com/aerospike/aerostation/api/v1"
    },
    "ClusterOptions": {
      "type": "object",
      "required": [
        "kubeversion",
        "replicas"
      ],
      "properties": {
        "aksOptions": {
          "$ref": "#/definitions/AKSOptions"
        },
        "dockerOptions": {
          "$ref": "#/definitions/DockerOptions"
        },
        "eksOptions": {
          "$ref": "#/definitions/EKSOptions"
        },
        "gkeOptions": {
          "$ref": "#/definitions/GKEOptions"
        },
        "kubeversion": {
          "description": "k8s version",
          "type": "string",
          "x-go-name": "KubeVersion",
          "example": "v1.20.0"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "provider": {
          "type": "string",
          "x-go-name": "Provider"
        },
        "replicas": {
          "description": "Number of replicas of instances",
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "x-go-name": "Replicas",
          "example": 1
        }
      },
      "x-go-package": "github.com/aerospike/aerostation/api/v1"
    },
    "CreateAerospikeClusterAdminRequest": {
      "description": "CreateAerospikeClusterAdminRequest A request to create an aerospike cluster",
      "type": "object",
      "required": [
        "kubernetesClusterName",
        "kubernetesClusterNamespace",
        "name",
        "targetNamespace",
        "provider",
        "kubeversion",
        "replicas",
        "namespace",
        "databaseType",
        "options"
      ],
      "properties": {
        "databaseType": {
          "description": "DatabaseType of the aerospike cluster (memory/ssd/performance)",
          "type": "string",
          "x-go-name": "DatabaseType",
          "example": "memory"
        },
        "deployClient": {
          "description": "Flag if set to true will cause the REST Client to be deployed",
          "type": "boolean",
          "x-go-name": "DeployClient",
          "example": true
        },
        "kubernetesClusterName": {
          "description": "KubernetesClusterName of workload cluster",
          "type": "string",
          "x-go-name": "KubernetesClusterName",
          "example": "cluster-1"
        },
        "kubernetesClusterNamespace": {
          "description": "KubernetesClusterNamespace of workload cluster",
          "type": "string",
          "x-go-name": "KubernetesClusterNamespace",
          "example": "default"
        },
        "kubeversion": {
          "description": "kube version",
          "type": "string",
          "x-go-name": "KubeVersion",
          "example": "v1.22.0"
        },
        "name": {
          "description": "Name of aerospike cluster",
          "type": "string",
          "x-go-name": "Name",
          "example": "name"
        },
        "namespace": {
          "description": "Namespace of aerospike cluster",
          "type": "string",
          "x-go-name": "Namespace",
          "example": "default"
        },
        "options": {
          "$ref": "#/definitions/DatabaseOptions"
        },
        "provider": {
          "description": "capi Provider type",
          "type": "string",
          "x-go-name": "Provider",
          "example": "docker"
        },
        "replicas": {
          "description": "replicas",
          "type": "integer",
          "format": "int32",
          "x-go-name": "Replicas",
          "example": 1
        },
        "targetNamespace": {
          "description": "Namespace on remote cluster where database will be created",
          "type": "string",
          "x-go-name": "TargetNamespace",
          "example": "customer1"
        }
      },
      "x-go-package": "github.com/aerospike/aerostation/api-server/pkg/requests"
    },
    "CreateAerospikeClusterRequest": {
      "description": "CreateAerospikeClusterRequest A request to create an aerospike cluster",
      "type": "object",
      "required": [
        "region",
        "name",
        "targetNamespace",
        "provider",
        "databaseType",
        "options"
      ],
      "properties": {
        "databaseType": {
          "description": "DatabaseType of the aerospike cluster (memory/ssd/performance)",
          "type": "string",
          "x-go-name": "DatabaseType",
          "example": "memory"
        },
        "name": {
          "description": "Name of aerospike cluster",
          "type": "string",
          "x-go-name": "Name",
          "example": "name"
        },
        "options": {
          "$ref": "#/definitions/DatabaseOptions"
        },
        "provider": {
          "description": "target database namespace",
          "type": "string",
          "x-go-name": "Provider",
          "example": "default"
        },
        "region": {
          "description": "KubernetesClusterName of workload cluster",
          "type": "string",
          "x-go-name": "Region",
          "example": "cluster-1"
        },
        "targetNamespace": {
          "description": "capi provider type",
          "type": "string",
          "x-go-name": "TargetName",
          "example": "docker"
        }
      },
      "x-go-package": "github.com/aerospike/aerostation/api-server/pkg/requests"
    },
    "DatabaseOptions": {
      "description": "DatabaseOptions the mutable options of an aerospike cluster",
      "type": "object",
      "required": [
        "replicas"
      ],
      "properties": {
        "replicas": {
          "description": "Replicas of the aerospike cluster",
          "type": "integer",
          "format": "int32",
          "x-go-name": "Replicas",
          "example": 2
        }
      },
      "x-go-package": "github.com/aerospike/aerostation/api/v1"
    },
    "DockerOptions": {
      "type": "object",
      "x-go-package": "github.com/aerospike/aerostation/api/v1"
    },
    "EKSOptions": {
      "description": "EKSOptions input for creating workload cluster on EKS",
      "type": "object",
      "required": [
        "region",
        "instanceType",
        "sshKey"
      ],
      "properties": {
        "instanceType": {
          "description": "Type of ec2 instance for workload cluster",
          "type": "string",
          "x-go-name": "InstanceType",
          "example": "t3.medium"
        },
        "region": {
          "description": "Region of workload cluster",
          "type": "string",
          "x-go-name": "Region",
          "example": "us-east-1"
        },
        "sshKey": {
          "description": "SSH key name",
          "type": "string",
          "x-go-name": "SSHKey",
          "example": "default"
        }
      },
      "x-go-package": "github.com/aerospike/aerostation/api/v1"
    },
    "FieldsV1": {
      "description": "Each key is either a '.' representing the field itself, and will always map to an empty set,\nor a string representing a sub-field or item. The string will follow one of these four formats:\n'f:\u003cname\u003e', where \u003cname\u003e is the name of a field in a struct, or key in a map\n'v:\u003cvalue\u003e', where \u003cvalue\u003e is the exact json formatted value of a list item\n'i:\u003cindex\u003e', where \u003cindex\u003e is position of a item in a list\n'k:\u003ckeys\u003e', where \u003ckeys\u003e is a map of  a list item's key fields to their unique values\nIf a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff\n+protobuf.options.(gogoproto.goproto_stringer)=false",
      "type": "object",
      "title": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.",
      "x-go-package": "k8s.io/apimachinery/pkg/apis/meta/v1"
    },
    "GKEOptions": {
      "type": "object",
      "x-go-package": "github.com/aerospike/aerostation/api/v1"
    },
    "GetAerospikeClustersByNamespaceRequest": {
      "type": "object",
      "required": [
        "namespace"
      ],
      "properties": {
        "namespace": {
          "description": "Namespace of user",
          "type": "string",
          "x-go-name": "Namespace",
          "example": "{UUID}"
        }
      },
      "x-go-package": "github.com/aerospike/aerostation/api-server/pkg/requests"
    },
    "KubernetesClusterResponse": {
      "type": "object",
      "properties": {
        "cluster": {
          "$ref": "#/definitions/AeroClusterManagerSpec"
        },
        "status": {
          "$ref": "#/definitions/AeroClusterManagerStatus"
        }
      },
      "x-go-package": "github.com/aerospike/aerostation/api-server/pkg/responses"
    },
    "ListMeta": {
      "description": "ListMeta describes metadata that synthetic resources must have, including lists and\nvarious status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
      "type": "object",
      "properties": {
        "continue": {
          "description": "continue may be set if the user set a limit on the number of items returned, and indicates that\nthe server has more data available. The value is opaque and may be used to issue another request\nto the endpoint that served this list to retrieve the next set of available objects. Continuing a\nconsistent list may not be possible if the server configuration has changed or more than a few\nminutes have passed. The resourceVersion field returned when using this continue value will be\nidentical to the value in the first response, unless you have received this token from an error\nmessage.",
          "type": "string",
          "x-go-name": "Continue"
        },
        "remainingItemCount": {
          "description": "remainingItemCount is the number of subsequent items in the list which are not included in this\nlist response. If the list request contained label or field selectors, then the number of\nremaining items is unknown and the field will be left unset and omitted during serialization.\nIf the list is complete (either because it is not chunking or because this is the last chunk),\nthen there are no more remaining items and this field will be left unset and omitted during\nserialization.\nServers older than v1.15 do not set this field.\nThe intended use of the remainingItemCount is *estimating* the size of a collection. Clients\nshould not rely on the remainingItemCount to be set or to be exact.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "RemainingItemCount"
        },
        "resourceVersion": {
          "description": "String that identifies the server's internal version of this object that\ncan be used by clients to determine when objects have changed.\nValue must be treated as opaque by clients and passed unmodified back to the server.\nPopulated by the system.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional",
          "type": "string",
          "x-go-name": "ResourceVersion"
        },
        "selfLink": {
          "description": "selfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n\nDEPRECATED\nKubernetes will stop propagating this field in 1.20 release and the field is planned\nto be removed in 1.21 release.\n+optional",
          "type": "string",
          "x-go-name": "SelfLink"
        }
      },
      "x-go-package": "k8s.io/apimachinery/pkg/apis/meta/v1"
    },
    "ManagedFieldsEntry": {
      "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource\nthat the fieldset applies to.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the version of this resource that this field set\napplies to. The format is \"group/version\" just like the top-level\nAPIVersion field. It is necessary to track the version of a field\nset because it cannot be automatically converted.",
          "type": "string",
          "x-go-name": "APIVersion"
        },
        "fieldsType": {
          "description": "FieldsType is the discriminator for the different fields format and version.\nThere is currently only one possible value: \"FieldsV1\"",
          "type": "string",
          "x-go-name": "FieldsType"
        },
        "fieldsV1": {
          "$ref": "#/definitions/FieldsV1"
        },
        "manager": {
          "description": "Manager is an identifier of the workflow managing these fields.",
          "type": "string",
          "x-go-name": "Manager"
        },
        "operation": {
          "$ref": "#/definitions/ManagedFieldsOperationType"
        },
        "subresource": {
          "description": "Subresource is the name of the subresource used to update that object, or\nempty string if the object was updated through the main resource. The\nvalue of this field is used to distinguish between managers, even if they\nshare the same name. For example, a status update will be distinct from a\nregular update using the same manager name.\nNote that the APIVersion field is not related to the Subresource field and\nit always corresponds to the version of the main resource.",
          "type": "string",
          "x-go-name": "Subresource"
        },
        "time": {
          "$ref": "#/definitions/Time"
        }
      },
      "x-go-package": "k8s.io/apimachinery/pkg/apis/meta/v1"
    },
    "ManagedFieldsOperationType": {
      "type": "string",
      "title": "ManagedFieldsOperationType is the type of operation which lead to a ManagedFieldsEntry being created.",
      "x-go-package": "k8s.io/apimachinery/pkg/apis/meta/v1"
    },
    "NamespacedName": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "x-go-name": "Name",
          "example": "name"
        },
        "namespace": {
          "type": "string",
          "x-go-name": "Namespace",
          "example": "default"
        }
      },
      "x-go-package": "github.com/aerospike/aerostation/api/v1"
    },
    "ObjectMeta": {
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects\nusers must create.",
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Annotations"
        },
        "clusterName": {
          "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n+optional",
          "type": "string",
          "x-go-name": "ClusterName"
        },
        "creationTimestamp": {
          "$ref": "#/definitions/Time"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "DeletionGracePeriodSeconds"
        },
        "deletionTimestamp": {
          "$ref": "#/definitions/Time"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Finalizers"
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional",
          "type": "string",
          "x-go-name": "GenerateName"
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Generation"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Labels"
        },
        "managedFields": {
          "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedFieldsEntry"
          },
          "x-go-name": "ManagedFields"
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
          "type": "string",
          "x-go-name": "Name"
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional",
          "type": "string",
          "x-go-name": "Namespace"
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OwnerReference"
          },
          "x-go-name": "OwnerReferences"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional",
          "type": "string",
          "x-go-name": "ResourceVersion"
        },
        "selfLink": {
          "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n\nDEPRECATED\nKubernetes will stop propagating this field in 1.20 release and the field is planned\nto be removed in 1.21 release.\n+optional",
          "type": "string",
          "x-go-name": "SelfLink"
        },
        "uid": {
          "$ref": "#/definitions/UID"
        }
      },
      "x-go-package": "k8s.io/apimachinery/pkg/apis/meta/v1"
    },
    "OwnerReference": {
      "description": "OwnerReference contains enough information to let you identify an owning\nobject. An owning object must be in the same namespace as the dependent, or\nbe cluster-scoped, so there is no namespace field.\n+structType=atomic",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "API version of the referent.",
          "type": "string",
          "x-go-name": "APIVersion"
        },
        "blockOwnerDeletion": {
          "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then\nthe owner cannot be deleted from the key-value store until this\nreference is removed.\nDefaults to false.\nTo set this field, a user needs \"delete\" permission of the owner,\notherwise 422 (Unprocessable Entity) will be returned.\n+optional",
          "type": "boolean",
          "x-go-name": "BlockOwnerDeletion"
        },
        "controller": {
          "description": "If true, this reference points to the managing controller.\n+optional",
          "type": "boolean",
          "x-go-name": "Controller"
        },
        "kind": {
          "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "x-go-name": "Kind"
        },
        "name": {
          "description": "Name of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string",
          "x-go-name": "Name"
        },
        "uid": {
          "$ref": "#/definitions/UID"
        }
      },
      "x-go-package": "k8s.io/apimachinery/pkg/apis/meta/v1"
    },
    "SignInRequest": {
      "description": "SignInRequest",
      "type": "object",
      "required": [
        "username",
        "password"
      ],
      "properties": {
        "password": {
          "description": "Password for signin",
          "type": "string",
          "x-go-name": "Password",
          "example": "password1"
        },
        "username": {
          "description": "Username for signin",
          "type": "string",
          "x-go-name": "Username",
          "example": "dev1"
        }
      },
      "x-go-package": "github.com/aerospike/aerostation/pkg/auth"
    },
    "SignInResponse": {
      "description": "SignInResponse",
      "type": "object",
      "properties": {
        "access_token": {
          "description": "The access token. This has bare minimum details about auth and not attribute, if another micro service needs to call this service, then we can make use of access_token\nThis is used in authentication",
          "type": "string",
          "x-go-name": "AccessToken"
        },
        "expires_in": {
          "description": "The expiration period of the authentication result in seconds.",
          "type": "integer",
          "format": "int32",
          "x-go-name": "ExpiresIn"
        },
        "id_token": {
          "description": "The ID token contains all attributes set in the auth pool, right now we have just username enabled in userpool, hence we can fetch only username from id_token\nIn future we might add more attributes and use this as identifier for PII (Personal Identifying  Identification)",
          "type": "string",
          "x-go-name": "IdToken"
        },
        "refresh_token": {
          "description": "The refresh token. This is used to retrieve new access_token and id_token. By default, this expires in 30 days",
          "type": "string",
          "x-go-name": "RefreshToken"
        },
        "token_type": {
          "description": "The token type.",
          "type": "string",
          "x-go-name": "TokenType"
        }
      },
      "x-go-package": "github.com/aerospike/aerostation/pkg/auth"
    },
    "SignupRequest": {
      "description": "SignupRequest",
      "type": "object",
      "required": [
        "username",
        "password"
      ],
      "properties": {
        "password": {
          "description": "Password for the user",
          "type": "string",
          "x-go-name": "Password",
          "example": "password1"
        },
        "username": {
          "description": "Username for signup",
          "type": "string",
          "x-go-name": "Username",
          "example": "dev1"
        }
      },
      "x-go-package": "github.com/aerospike/aerostation/pkg/auth"
    },
    "Time": {
      "description": "Programs using times should typically store and pass them as values,\nnot pointers. That is, time variables and struct fields should be of\ntype time.Time, not *time.Time.\n\nA Time value can be used by multiple goroutines simultaneously except\nthat the methods GobDecode, UnmarshalBinary, UnmarshalJSON and\nUnmarshalText are not concurrency-safe.\n\nTime instants can be compared using the Before, After, and Equal methods.\nThe Sub method subtracts two instants, producing a Duration.\nThe Add method adds a Time and a Duration, producing a Time.\n\nThe zero value of type Time is January 1, year 1, 00:00:00.000000000 UTC.\nAs this time is unlikely to come up in practice, the IsZero method gives\na simple way of detecting a time that has not been initialized explicitly.\n\nEach Time has associated with it a Location, consulted when computing the\npresentation form of the time, such as in the Format, Hour, and Year methods.\nThe methods Local, UTC, and In return a Time with a specific location.\nChanging the location in this way changes only the presentation; it does not\nchange the instant in time being denoted and therefore does not affect the\ncomputations described in earlier paragraphs.\n\nRepresentations of a Time value saved by the GobEncode, MarshalBinary,\nMarshalJSON, and MarshalText methods store the Time.Location's offset, but not\nthe location name. They therefore lose information about Daylight Saving Time.\n\nIn addition to the required “wall clock” reading, a Time may contain an optional\nreading of the current process's monotonic clock, to provide additional precision\nfor comparison or subtraction.\nSee the “Monotonic Clocks” section in the package documentation for details.\n\nNote that the Go == operator compares not just the time instant but also the\nLocation and the monotonic clock reading. Therefore, Time values should not\nbe used as map or database keys without first guaranteeing that the\nidentical Location has been set for all values, which can be achieved\nthrough use of the UTC or Local method, and that the monotonic clock reading\nhas been stripped by setting t = t.Round(0). In general, prefer t.Equal(u)\nto t == u, since t.Equal uses the most accurate comparison available and\ncorrectly handles the case when only one of its arguments has a monotonic\nclock reading.",
      "type": "string",
      "format": "date-time",
      "title": "A Time represents an instant in time with nanosecond precision.",
      "x-go-package": "k8s.io/apimachinery/pkg/apis/meta/v1"
    },
    "TypeMeta": {
      "description": "+k8s:deepcopy-gen=false",
      "type": "object",
      "title": "TypeMeta describes an individual object in an API response or request\nwith strings representing the type of the object and its API schema version.\nStructures that are versioned or persisted should inline TypeMeta.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n+optional",
          "type": "string",
          "x-go-name": "APIVersion"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional",
          "type": "string",
          "x-go-name": "Kind"
        }
      },
      "x-go-package": "k8s.io/apimachinery/pkg/apis/meta/v1"
    },
    "UID": {
      "description": "UID is a type that holds unique ID values, including UUIDs.  Because we\ndon't ONLY use UUIDs, this is an alias to string.  Being a type captures\nintent and helps make sure that UIDs and names do not get conflated.",
      "type": "string",
      "x-go-package": "k8s.io/apimachinery/pkg/types"
    }
  },
  "securityDefinitions": {
    "BasicAuth": {
      "type": "basic"
    }
  },
  "security": [
    {
      "BasicAuth": []
    }
  ]
}